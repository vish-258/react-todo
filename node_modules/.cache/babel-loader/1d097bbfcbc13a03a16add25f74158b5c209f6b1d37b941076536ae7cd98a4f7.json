{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\badri\\\\OneDrive\\\\Desktop\\\\todoapp\\\\src\\\\components\\\\TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoForm = ({\n  addTodo\n}) => {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Do something with the 'value' state, like adding it to a todo list\n    console.log(\"Task added:\", value);\n    // You can add further logic here, like sending the task to a backend or updating a todo list\n    setValue(\"\"); // Reset the input field after submission\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"TodoForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"todo-input\",\n      placeholder: \"What is the task today?\",\n      value: value,\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"todo-btn\",\n      children: [\"Add Task\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n_c = TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","addTodo","_s","value","setValue","handleSubmit","e","preventDefault","console","log","className","onSubmit","children","type","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/badri/OneDrive/Desktop/todoapp/src/components/TodoForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const TodoForm = ({ addTodo }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Do something with the 'value' state, like adding it to a todo list\r\n    console.log(\"Task added:\", value);\r\n    // You can add further logic here, like sending the task to a backend or updating a todo list\r\n    setValue(\"\"); // Reset the input field after submission\r\n  };\r\n\r\n  return (\r\n    <form className=\"TodoForm\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        placeholder=\"What is the task today?\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n      />{\" \"}\r\n      <button type=\"submit\" className=\"todo-btn\">\r\n        Add Task{\" \"}\r\n      </button>{\" \"}\r\n    </form>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEN,KAAK,CAAC;IACjC;IACAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;;EAED,oBACEL,OAAA;IAAMW,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBAChDb,OAAA;MACEc,IAAI,EAAC,MAAM;MACXH,SAAS,EAAC,YAAY;MACtBI,WAAW,EAAC,yBAAyB;MACrCX,KAAK,EAAEA,KAAM;MACbY,QAAQ,EAAGT,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACU,MAAM,CAACb,KAAK;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAAC,GAAG,eACNrB,OAAA;MAAQc,IAAI,EAAC,QAAQ;MAACH,SAAS,EAAC,UAAU;MAAAE,QAAA,GAAC,UACjC,EAAC,GAAG;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAAC,GAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEX,CAAC;AAAClB,EAAA,CAzBWF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}